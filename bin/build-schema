#!/usr/bin/env node
'use strict';

const path = require('path');
const fs = require('fs');
const graphql = require('graphql').graphql;
const graphqlUtilities = require('graphql/utilities');

const ENV = process.env;
const SOURCE = path.resolve(ENV.SOURCE);
const TARGET_JSON = path.resolve(ENV.TARGET_JSON);
const TARGET_GRAPHQL = path.resolve(ENV.TARGET_GRAPHQL);

let schema = require(SOURCE);
if (schema.default) schema = schema.default;

const introspectionQuery = graphqlUtilities.introspectionQuery;
const printSchema = graphqlUtilities.printSchema;

const writeIfChanged = (filePath, data) => {
  let existing;
  try { existing = fs.readFileSync(filePath, 'utf8'); } catch (er) {}
  if (data !== existing) fs.writeFileSync(filePath, data);
};

graphql(schema, introspectionQuery).then(result => {
  if (result.errors) {
    console.error(result.errors);
    process.exit(1);
  }
  writeIfChanged(TARGET_JSON, JSON.stringify(result.data));
  writeIfChanged(TARGET_GRAPHQL, printSchema(schema));
});
